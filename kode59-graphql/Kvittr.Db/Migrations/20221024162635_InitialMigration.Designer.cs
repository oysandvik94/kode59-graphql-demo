// <auto-generated />
using System;
using Kvittr.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kvittr.Model.Migrations
{
    [DbContext(typeof(KvittrDbContext))]
    [Migration("20221024162635_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Kvittr.Model.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1981, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Elon",
                            LastName = "Musk",
                            UserName = "musketeer"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1946, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Donald",
                            LastName = "Trump",
                            UserName = "trumpinator"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1964, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jeff",
                            LastName = "Bezos",
                            UserName = "bezoswisser"
                        });
                });

            modelBuilder.Entity("Kvittr.Model.Models.Kvitt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Worms")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Kvitts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Body = "Nuke Mars!",
                            Created = new DateTime(2022, 10, 24, 18, 26, 35, 552, DateTimeKind.Local).AddTicks(9670),
                            Worms = 12323
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Body = "Also, I'm buying Manchested United ur welcome",
                            Created = new DateTime(2022, 10, 24, 18, 26, 35, 552, DateTimeKind.Local).AddTicks(9703),
                            Worms = 6436456
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Body = "the color organge is named after the fruit",
                            Created = new DateTime(2022, 10, 24, 18, 26, 35, 552, DateTimeKind.Local).AddTicks(9706),
                            Worms = 23942934
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            Body = "Sorry losers and haters, but my I.Q. is one of the highest -and you all know it! Please don’t feel so stupid or insecure,it’s not your fault",
                            Created = new DateTime(2022, 10, 24, 18, 26, 35, 552, DateTimeKind.Local).AddTicks(9709),
                            Worms = 4575675
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            Body = "Windmills are the greatest threat in the US to both bald and golden eagles. Media claims fictional ‘global warming’ is worse.",
                            Created = new DateTime(2022, 10, 24, 18, 26, 35, 552, DateTimeKind.Local).AddTicks(9712),
                            Worms = 95769579
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            Body = "AWS > Azure",
                            Created = new DateTime(2022, 10, 24, 18, 26, 35, 552, DateTimeKind.Local).AddTicks(9717),
                            Worms = 846846
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            Body = "My dream is to be shot up in a rocket",
                            Created = new DateTime(2022, 10, 24, 18, 26, 35, 552, DateTimeKind.Local).AddTicks(9719),
                            Worms = 1
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            Body = "I got shot up in a rocket",
                            Created = new DateTime(2022, 10, 24, 18, 26, 35, 552, DateTimeKind.Local).AddTicks(9722),
                            Worms = 89769769
                        });
                });

            modelBuilder.Entity("Kvittr.Model.Models.Kvitt", b =>
                {
                    b.HasOne("Kvittr.Model.Models.Author", "Author")
                        .WithMany("Kvitts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Kvittr.Model.Models.Author", b =>
                {
                    b.Navigation("Kvitts");
                });
#pragma warning restore 612, 618
        }
    }
}
